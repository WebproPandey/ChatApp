<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat Room</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/style.css">
</head>
<body class="bg-gray-100">
  <div id="chat-container" class="max-w-2xl mx-auto p-4 bg-white shadow-md rounded-lg w-full sm:w-[90%] md:w-[80%] lg:w-[70%] xl:w-[60%]">
    <div id="chat-window" class="h-96 sm:h-[80%] md:h-96 overflow-y-auto mb-4 p-4 border border-gray-300 rounded-lg flex flex-col space-y-2">
      <div id="output" class="space-y-2 flex flex-col"></div>
      <div id="feedback" class="text-gray-500"></div>
    </div>
    <div class="flex flex-col sm:flex-row mb-2 justify-between space-y-2 sm:space-y-0">
      <input id="message" type="text" class="flex-grow outline-none border px-4 py-2 rounded-lg w-full sm:w-auto" placeholder="Message">
      <button class="bg-green-700 text-white px-4 py-2 rounded-lg w-full sm:w-auto" id="send-btn">Send</button>
    </div>
    <input type="file" id="file-input" class="mt-3 w-full sm:w-auto">
  </div>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const username = "<%= username %>";
    const room = "<%= room %>";

    socket.emit('joinRoom', { username, room });

    document.getElementById('send-btn').addEventListener('click', sendMessage);

    document.getElementById('message').addEventListener('keypress', (event) => {
      if (event.key === 'Enter') {
        sendMessage();
      } else {
        socket.emit('typing', username);
      }
    });

    document.getElementById('message').addEventListener('keyup', () => {
      setTimeout(() => {
        socket.emit('stopTyping', username);
      }, 1000);
    });

    document.getElementById('file-input').addEventListener('change', (event) => {
      const file = event.target.files[0];
      const formData = new FormData();
      formData.append('file', file);

      fetch('/upload', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        socket.emit('chatMessage', { username, message: `<a href="${data.filePath}" target="_blank">File</a>` });
      });
    });

    socket.on('message', (data) => {
      const messageClass = data.username === username ? 'message left' : 'message right';
      const messageContent = data.username === username ? data.message : `<strong>${data.username}:</strong> ${data.message}`;
      const messageElement = `
        <div class="${messageClass}">
          ${messageContent}
          <span class="timestamp">${new Date().toLocaleTimeString()}</span>
        </div>`;
      document.getElementById('output').insertAdjacentHTML('beforeend', messageElement);
      scrollToBottom();
    });

    socket.on('joinNotification', (message) => {
      document.getElementById('feedback').innerHTML = `<p>${message}</p>`;
    });

    socket.on('typing', (username) => {
      document.getElementById('feedback').innerHTML = `<p>${username} is typing...</p>`;
    });

    socket.on('stopTyping', () => {
      document.getElementById('feedback').innerHTML = '';
    });

    function sendMessage() {
      const message = document.getElementById('message').value;
      if (message.trim() !== '') {
        socket.emit('chatMessage', { username, message });
        document.getElementById('message').value = '';
        socket.emit('stopTyping', username); // Stop typing notification when message is sent
      }
    }

    function scrollToBottom() {
      const chatWindow = document.getElementById('chat-window');
      chatWindow.scrollTop = chatWindow.scrollHeight;
    }
  </script>
</body>
</html>